{"version":3,"sources":["res/viewport.ts","res/colors.ts","components/section/style/index.tsx","components/section/index.tsx","components/about/style/index.tsx","components/about/index.tsx","hooks/useFinishAnimSplashScreen.tsx","components/button/style/index.tsx","components/button/index.tsx","components/hero/style/index.tsx","components/hero/index.tsx","components/main/style/index.tsx","components/main/index.tsx","components/navbar/style/index.tsx","components/navbar/index.tsx","components/sertificate/style/index.tsx","components/sertificate/index.tsx","hooks/useViewPort.tsx","components/splashscreen/style/index.tsx","components/splashscreen/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ViewPort","ViewPortEm","Color","SectionElement","styled","motion","div","medium","SectionContent","large","SectionTitle","h2","Section","children","title","useInView","ref","inView","sectionAnimControl","useAnimation","useEffect","console","log","start","opacity","y","initial","transition","duration","ease","animate","id","AboutText","p","About","FinishAnimSplashScreenContext","createContext","FinishAnimSplashScreenProvider","useState","isFinish","setIsFinish","Provider","value","useFinishAnimSplashScreen","useContext","ButtonElement","a","dark","ButtonElementForAnim","primary","ButtonElementForAnimRight","secondary","ButtonElementGroup","ButtonText","span","Button","props","btnHover","setBtnHover","onMouseEnter","onMouseLeave","width","undefined","delay","Group","HeroElement","HeroDetailContainer","HeroText","HeroImageContainer","HeroImage","img","HeroImageForAnimBottom","Hero","isFinishAnimSplashScreen","emojiAnimControl","imageBorderAnimControl","rotate","scale","height","display","href","src","alt","DisableBodyScroll","createGlobalStyle","enable","MainElement","MainContent","white","Main","enableScroll","setEnableScroll","scrollTimeout","setTimeout","clearTimeout","NavbarElement","small","xlarge","NavbarImage","NavbarNav","nav","NavbarAnchor","NavbarItem","whileHover","color","danger","onClick","e","preventDefault","document","querySelector","scrollIntoView","behavior","Navbar","SertificateElement","SertificateImage","Sertificate","getWindowDimension","window","innerWidth","innerHeight","getCurrentViewPort","viewPort","Object","values","map","v","parseInt","currentViewPort","filter","length","useViewPort","windowDimensions","setWindowDimensions","setViewPort","addEventListener","SplashScreenElement","SplashScreenLogo","setFinishAnimSplashScreen","animTimeout","logoVariants","xsmall","x","svg","viewBox","variants","xmlns","path","stroke","fill","fillOpacity","strokeDashoffset","strokeDasharray","d","SplashScreen","warning","sort","Math","random","initialColor","splice","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.642e9518.chunk.js","sourcesContent":["enum ViewPort {\r\n  xsmall = \"0px\",\r\n  small = \"576px\",\r\n  medium = \"768px\",\r\n  large = \"992px\",\r\n  xlarge = \"1200px\",\r\n}\r\n\r\nexport enum ViewPortEm {\r\n  xsmall = \"0em\",\r\n  small = \"36em\",\r\n  medium = \"48em\",\r\n  large = \"62em\",\r\n  xlarge = \"75em\",\r\n}\r\n\r\nexport default ViewPort;\r\n","enum Color {\r\n  dark = \"#363636\",\r\n  primary = \"#C3F584\",\r\n  secondary = \"#CDF0EA\",\r\n  warning = \"#FFD271\",\r\n  danger = \"#F65C78\",\r\n  light = \"#F9F9F9\",\r\n  white = \"#FFFFFF\",\r\n}\r\n\r\nexport default Color;\r\n","import { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport ViewPort, { ViewPortEm } from \"../../../res/viewport\";\r\n\r\nexport const SectionElement = styled(motion.div)`\r\n  overflow: hidden;\r\n\r\n  @media (min-width: ${ViewPort.medium}) {\r\n    & + & {\r\n      margin-top: 5em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SectionContent = styled.div`\r\n  max-width: ${ViewPortEm.large};\r\n  margin: 0 auto;\r\n  padding: 2em;\r\n  padding-top: 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-weight: normal;\r\n  margin: 0;\r\n  margin-bottom: 2em;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SectionDividerHorizontalLine = () => {\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"5em\"\r\n      viewBox=\"10 0 210 10\"\r\n      preserveAspectRatio=\"none\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <motion.path\r\n        initial={{ strokeDasharray: 1000, strokeDashoffset: 1000 }}\r\n        animate={{ strokeDashoffset: 0 }}\r\n        transition={{ delay: 3.5, duration: 2 }}\r\n        d=\"M1 2.0699C153.806 20.4514 106.21 -4.27415 251 2.0699\"\r\n        stroke=\"black\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import { useAnimation } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { SectionContent, SectionElement, SectionTitle } from \"./style\";\r\n\r\ninterface SectionProps {\r\n  title: string;\r\n}\r\n\r\nconst Section: FC<SectionProps> = ({ children, title }) => {\r\n  const { ref, inView } = useInView();\r\n  const sectionAnimControl = useAnimation();\r\n\r\n  useEffect(() => {\r\n    console.log(inView);\r\n    if (inView) {\r\n      sectionAnimControl.start({ opacity: 1, y: 0 });\r\n    }\r\n  }, [inView]);\r\n\r\n  return (\r\n    <SectionElement\r\n      ref={ref}\r\n      initial={{ opacity: 0, y: 50 }}\r\n      transition={{ duration: 0.5, ease: \"linear\" }}\r\n      animate={sectionAnimControl}\r\n    >\r\n      <SectionContent>\r\n        <SectionTitle id={title}>{title}</SectionTitle>\r\n        {children}\r\n      </SectionContent>\r\n    </SectionElement>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\nimport { ViewPortEm } from \"../../../res/viewport\";\r\n\r\nexport const AboutText = styled.p`\r\n  margin: 0 auto;\r\n  max-width: ${ViewPortEm.medium};\r\n`;\r\n","import Section from \"../section\";\r\nimport { AboutText } from \"./style\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Section title=\"About\">\r\n      <AboutText>\r\n        I'm Fahri Ahmad Fachrudin, a third-year student of Information\r\n        Technology at University of Muhammadiyah Prof. Dr. Hamka with current\r\n        GPA 3.72. I'm used to build a website with Typescript Language for both\r\n        Front-End and Back-End and integrate them through REST API or GraphQL. I\r\n        have basic knowledge of HTML, CSS, JavaScript, and ReactJS to build a\r\n        Front-End and currently I have been learning NestJS to build a Back-End\r\n        with NodeJS and TypeScript. In addition to knowledge of Web Technology,\r\n        I also have basic knowledge of native Android.\r\n      </AboutText>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { createContext, Dispatch, FC, useContext, useState } from \"react\";\r\n\r\nconst FinishAnimSplashScreenContext = createContext<\r\n  [boolean, Dispatch<boolean>]\r\n>([] as any);\r\n\r\nexport const FinishAnimSplashScreenProvider: FC = ({ children }) => {\r\n  const [isFinish, setIsFinish] = useState<boolean>(false);\r\n\r\n  return (\r\n    <FinishAnimSplashScreenContext.Provider value={[isFinish, setIsFinish]}>\r\n      {children}\r\n    </FinishAnimSplashScreenContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFinishAnimSplashScreen = () =>\r\n  useContext(FinishAnimSplashScreenContext);\r\n\r\nexport default useFinishAnimSplashScreen;\r\n","import { AnchorHTMLAttributes, FC } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport Color from \"../../../res/colors\";\r\n\r\nexport const ButtonElement: FC<\r\n  AnchorHTMLAttributes<HTMLAnchorElement>\r\n> = styled.a`\r\n  position: relative;\r\n  border: 0.1em solid ${Color.dark};\r\n  background-color: transparent;\r\n  padding: 0.8em 1.5em;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ButtonElementForAnim = styled(motion.div)`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: ${Color.primary};\r\n  height: 100%;\r\n`;\r\n\r\nexport const ButtonElementForAnimRight = styled(ButtonElementForAnim)`\r\n  left: initial;\r\n  right: 0;\r\n  background-color: ${Color.secondary};\r\n`;\r\n\r\nexport const ButtonElementGroup = styled.div`\r\n  display: inline-flex;\r\n  gap: 1em;\r\n`;\r\n\r\nexport const ButtonText = styled.span`\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n","import { AnchorHTMLAttributes, useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  ButtonElement,\r\n  ButtonElementForAnim,\r\n  ButtonElementForAnimRight,\r\n  ButtonElementGroup,\r\n  ButtonText,\r\n} from \"./style\";\r\n\r\ninterface IButton {\r\n  Group: FC;\r\n}\r\n\r\nconst Button: FC<AnchorHTMLAttributes<HTMLAnchorElement>> & IButton = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  const [btnHover, setBtnHover] = useState(false);\r\n\r\n  return (\r\n    <ButtonElement\r\n      {...props}\r\n      onMouseEnter={() => setBtnHover(true)}\r\n      onMouseLeave={() => setBtnHover(false)}\r\n    >\r\n      <ButtonElementForAnimRight\r\n        animate={btnHover ? { width: \"100%\" } : undefined}\r\n        transition={{ duration: 0.25 }}\r\n      />\r\n      <ButtonElementForAnim\r\n        animate={btnHover ? { width: \"100%\" } : undefined}\r\n        transition={{ delay: 0.5, duration: 0.25 }}\r\n      />\r\n      <ButtonText>{children}</ButtonText>\r\n    </ButtonElement>\r\n  );\r\n};\r\n\r\nButton.Group = ({ children }) => {\r\n  return <ButtonElementGroup>{children}</ButtonElementGroup>;\r\n};\r\n\r\nexport default Button;\r\n","import { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport Color from \"../../../res/colors\";\r\nimport ViewPort, { ViewPortEm } from \"../../../res/viewport\";\r\n\r\nexport const HeroElement = styled.div`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  max-width: ${ViewPortEm.large};\r\n  padding: 2em;\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n  margin-bottom: 2em;\r\n\r\n  @media (min-width: ${ViewPort.medium}) {\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    padding-top: 6em;\r\n    padding-bottom: 10em;\r\n    gap: 2em;\r\n  }\r\n`;\r\n\r\nexport const HeroDetailContainer = styled.div``;\r\n\r\nexport const HeroText = styled.p`\r\n  font-size: 1.3em;\r\n  max-width: 24em;\r\n  margin-top: 2em;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nexport const HeroImageContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const HeroImage = styled.img`\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${ViewPort.medium}) {\r\n    width: 20em;\r\n    height: 20em;\r\n  }\r\n`;\r\n\r\nexport const HeroImageForAnimBottom = styled(motion.div)`\r\n  bottom: -0.8em;\r\n  left: -0.8em;\r\n  border: 0.1em solid ${Color.dark};\r\n  border-right: 0;\r\n  border-top: 0;\r\n  position: absolute;\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport useFinishAnimSplashScreen from \"../../hooks/useFinishAnimSplashScreen\";\r\nimport Button from \"../button\";\r\nimport {\r\n  HeroDetailContainer,\r\n  HeroElement,\r\n  HeroImage,\r\n  HeroImageContainer,\r\n  HeroImageForAnimBottom,\r\n  HeroText,\r\n} from \"./style\";\r\n\r\nconst Hero = () => {\r\n  const [isFinishAnimSplashScreen] = useFinishAnimSplashScreen();\r\n  const emojiAnimControl = useAnimation();\r\n  const imageBorderAnimControl = useAnimation();\r\n\r\n  useEffect(() => {\r\n    if (isFinishAnimSplashScreen) {\r\n      emojiAnimControl.start({ rotate: [0, -45, 0], scale: [1, 1.5, 1] });\r\n      imageBorderAnimControl.start({ height: \"100%\", width: \"100%\" });\r\n    }\r\n  }, [isFinishAnimSplashScreen]);\r\n\r\n  return (\r\n    <HeroElement>\r\n      <HeroDetailContainer>\r\n        <HeroText>\r\n          Hello there{\" \"}\r\n          <motion.span\r\n            initial={{ display: \"inline-block\" }}\r\n            animate={emojiAnimControl}\r\n          >\r\n            🤞\r\n          </motion.span>\r\n          , I'm a Full Stack enthusiast that made with TypeScript / Node.js /\r\n          React.js\r\n        </HeroText>\r\n        <Button.Group>\r\n          <Button href=\"mailto:fahri.ahmad@live.com\">Email Me</Button>\r\n          <Button href=\"./fahri_resume.pdf\">Download Resume</Button>\r\n        </Button.Group>\r\n      </HeroDetailContainer>\r\n      <HeroImageContainer>\r\n        <HeroImageForAnimBottom\r\n          animate={imageBorderAnimControl}\r\n          transition={{ duration: 1 }}\r\n        />\r\n        <HeroImage src=\"./hero.jpg\" alt=\"fahri\" />\r\n      </HeroImageContainer>\r\n    </HeroElement>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import { motion } from \"framer-motion\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Color from \"../../../res/colors\";\r\n\r\nexport const DisableBodyScroll = createGlobalStyle<{ enable?: boolean }>`\r\n  body {\r\n    overflow: ${(props) => (props.enable ? \"auto\" : \"hidden\")};\r\n  }`;\r\n\r\nexport const MainElement = styled(motion.div)`\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const MainContent = styled.div`\r\n  width: 100vw;\r\n  background-color: ${Color.white};\r\n  min-height: 100vh;\r\n  box-sizing: border-;\r\n  overflow: hidden;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport useFinishAnimSplashScreen from \"../../hooks/useFinishAnimSplashScreen\";\r\nimport { DisableBodyScroll, MainContent, MainElement } from \"./style\";\r\n\r\nconst Main: FC = ({ children }) => {\r\n  const [isFinishAnimSplashScreen] = useFinishAnimSplashScreen();\r\n  const [enableScroll, setEnableScroll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let scrollTimeout: NodeJS.Timeout;\r\n\r\n    if (isFinishAnimSplashScreen) {\r\n      scrollTimeout = setTimeout(() => {\r\n        setEnableScroll(true);\r\n      }, 500);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(scrollTimeout);\r\n    };\r\n  }, [isFinishAnimSplashScreen]);\r\n\r\n  return (\r\n    <MainElement\r\n      initial={{ width: 0 }}\r\n      animate={{ width: \"initial\" }}\r\n      transition={{ delay: 3, duration: 1 }}\r\n    >\r\n      <DisableBodyScroll enable={enableScroll} />\r\n      <MainContent>{children}</MainContent>\r\n    </MainElement>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { motion } from \"framer-motion\";\r\nimport { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Color from \"../../../res/colors\";\r\nimport ViewPort from \"../../../res/viewport\";\r\n\r\nexport const NavbarElement = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  padding: 1.6em 1.5em;\r\n\r\n  @media (min-width: ${ViewPort.small}) {\r\n    padding: 1.6em 2.5em;\r\n  }\r\n\r\n  @media (min-width: ${ViewPort.medium}) {\r\n    padding: 1.6em 4em;\r\n  }\r\n\r\n  @media (min-width: ${ViewPort.large}) {\r\n    padding: 1.6em 5.5em;\r\n  }\r\n\r\n  @media (min-width: ${ViewPort.xlarge}) {\r\n    padding: 1.6em 6.25em;\r\n  }\r\n`;\r\n\r\nexport const NavbarImage = styled.img`\r\n  width: 5em;\r\n  height: 7.2em;\r\n`;\r\n\r\nexport const NavbarNav = styled.nav`\r\n  display: none;\r\n  gap: 2em;\r\n\r\n  @media (min-width: ${ViewPort.small}) {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst NavbarAnchor = styled(motion.a)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;\r\n\r\nexport const NavbarItem: FC<{ href: string }> = ({ children, href }) => {\r\n  return (\r\n    <NavbarAnchor\r\n      whileHover={{ color: Color.danger, scale: 1.2 }}\r\n      href=\"#about\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        document.querySelector(href)?.scrollIntoView({\r\n          behavior: \"smooth\",\r\n        });\r\n      }}\r\n    >\r\n      {children}\r\n    </NavbarAnchor>\r\n  );\r\n};\r\n","import { NavbarElement, NavbarImage, NavbarItem, NavbarNav } from \"./style\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <NavbarElement>\r\n      <NavbarImage src=\"./logo.svg\" alt=\"faf\" />\r\n      <NavbarNav>\r\n        <NavbarItem href=\"#About\">About</NavbarItem>\r\n        <NavbarItem href=\"#Sertificate\">Sertificate</NavbarItem>\r\n      </NavbarNav>\r\n    </NavbarElement>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport ViewPort from \"../../../res/viewport\";\r\n\r\nexport const SertificateElement = styled.div`\r\n  display: grid;\r\n  grid-gap: 0.5em;\r\n\r\n  @media (min-width: ${ViewPort.medium}) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nexport const SertificateImage = styled(motion.img)`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n","import Section from \"../section\";\r\nimport { SertificateElement, SertificateImage } from \"./style\";\r\n\r\nconst Sertificate = () => {\r\n  const firstSertif = {\r\n    src: \"./bangkit-sertif.png\",\r\n    alt: \"Bangkit's Sertificate\",\r\n  };\r\n\r\n  const secondSertif = {\r\n    src: \"./android-sertif.png\",\r\n    alt: \"Menjadi Developer Android Expert's Sertificate\",\r\n  };\r\n\r\n  const thirdSertif = {\r\n    src: \"./backend-sertif.png\",\r\n    alt: \"Belajar Membuat Aplikasi Backend untuk Pemula's Sertificate\",\r\n  };\r\n\r\n  return (\r\n    <Section title=\"Sertificate\">\r\n      <SertificateElement>\r\n        <SertificateImage {...firstSertif} />\r\n        <SertificateImage {...secondSertif} />\r\n        <SertificateImage {...thirdSertif} />\r\n      </SertificateElement>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Sertificate;\r\n","import { useEffect, useState } from \"react\";\r\nimport ViewPort from \"../res/viewport\";\r\n\r\nconst getWindowDimension = () => [window.innerWidth, window.innerHeight];\r\n\r\nconst getCurrentViewPort = (width: number) => {\r\n  const viewPort = Object.values(ViewPort).map((v) => parseInt(v));\r\n  const currentViewPort = viewPort.filter((v) => v <= width);\r\n  return currentViewPort.length > 0\r\n    ? currentViewPort[currentViewPort.length - 1]\r\n    : viewPort[0];\r\n};\r\n\r\nconst useViewPort = () => {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimension);\r\n  const [viewPort, setViewPort] = useState(() =>\r\n    getCurrentViewPort(windowDimensions[0])\r\n  );\r\n  const currentViewPort = getCurrentViewPort(windowDimensions[0]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () =>\r\n      setWindowDimensions(getWindowDimension())\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setViewPort(currentViewPort);\r\n  }, [currentViewPort]);\r\n\r\n  return viewPort + \"px\";\r\n};\r\n\r\nexport default useViewPort;\r\n","import { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport Color from \"../../../res/colors\";\r\nimport useViewPort from \"../../../hooks/useViewPort\";\r\nimport ViewPort from \"../../../res/viewport\";\r\nimport useFinishAnimSplashScreen from \"../../../hooks/useFinishAnimSplashScreen\";\r\n\r\nexport const SplashScreenElement = styled(motion.div)`\r\n  position: fixed;\r\n  width: 100vw;\r\n  min-height: 100%;\r\n  overflow: hidden;\r\n  z-index: -1;\r\n`;\r\n\r\nexport const SplashScreenLogo = () => {\r\n  const currentViewPort = useViewPort();\r\n  const [, setFinishAnimSplashScreen] = useFinishAnimSplashScreen();\r\n\r\n  useEffect(() => {\r\n    const animTimeout = setTimeout(() => {\r\n      setFinishAnimSplashScreen(true);\r\n    }, 3500);\r\n\r\n    return () => {\r\n      clearTimeout(animTimeout);\r\n    };\r\n  }, []);\r\n\r\n  const logoVariants = {\r\n    [ViewPort.xsmall]: {\r\n      scale: 1,\r\n      x: 25,\r\n      y: 25,\r\n    },\r\n    [ViewPort.small]: {\r\n      scale: 1,\r\n      x: 40,\r\n      y: 25,\r\n    },\r\n    [ViewPort.medium]: {\r\n      scale: 1,\r\n      x: 64,\r\n      y: 25,\r\n    },\r\n    [ViewPort.large]: {\r\n      scale: 1,\r\n      x: 88,\r\n      y: 25,\r\n    },\r\n    [ViewPort.xlarge]: {\r\n      scale: 1,\r\n      x: 100,\r\n      y: 25,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <motion.svg\r\n      width=\"5em\"\r\n      viewBox=\"0 0 238 343\"\r\n      initial={{\r\n        scale: 2,\r\n        x: \"calc(50vw + 2.5em)\",\r\n        y: \"calc(50vh + 2.5em)\",\r\n      }}\r\n      animate={currentViewPort}\r\n      variants={logoVariants}\r\n      transition={{ delay: 2, duration: 1 }}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <motion.path\r\n        stroke={Color.dark}\r\n        fill={Color.dark}\r\n        initial={{\r\n          fillOpacity: 0,\r\n          strokeDashoffset: 1000,\r\n          strokeDasharray: 1000,\r\n        }}\r\n        animate={{ strokeDashoffset: 0, fillOpacity: 1 }}\r\n        transition={{\r\n          strokeDashoffset: { duration: 2 },\r\n          fillOpacity: { delay: 2, duration: 1 },\r\n        }}\r\n        d=\"M11.3125 212.891C18.25 209.797 24.5312 206.234 30.1562 202.203C35.875 198.172 40.9375 193.953 45.3438 189.547C49.8438 185.047 53.6406 180.5 56.7344 175.906C59.9219 171.219 62.4531 166.766 64.3281 162.547C65.1719 160.484 66.7656 159.453 69.1094 159.453C70.7031 159.453 71.9688 160.016 72.9062 161.141C73.9375 162.172 74.4531 163.344 74.4531 164.656C74.4531 165.406 74.3125 166.109 74.0312 166.766C71.9688 171.359 69.3438 176.141 66.1562 181.109C62.9688 185.984 59.0781 190.812 54.4844 195.594C49.9844 200.281 44.6875 204.828 38.5938 209.234C32.5 213.641 25.5156 217.672 17.6406 221.328C22.7031 226.578 27.1094 232.391 30.8594 238.766C34.6094 245.234 37.7031 251.938 40.1406 258.875C42.6719 265.812 44.5469 272.797 45.7656 279.828C47.0781 286.953 47.7344 293.75 47.7344 300.219C47.7344 306.125 47.1719 311.656 46.0469 316.812C45.0156 322.062 43.4219 326.609 41.2656 330.453C39.2031 334.297 36.6719 337.297 33.6719 339.453C30.6719 341.703 27.25 342.828 23.4062 342.828C17.7812 342.828 13.4219 340.719 10.3281 336.5C7.23438 332.375 4.9375 326.609 3.4375 319.203C2.03125 311.891 1.1875 303.219 0.90625 293.188C0.71875 283.25 0.625 272.422 0.625 260.703C0.625 254.891 0.625 248.094 0.625 240.312C0.625 232.625 0.625 224.328 0.625 215.422C0.71875 206.609 0.765625 197.375 0.765625 187.719C0.859375 177.969 0.953125 168.219 1.04688 158.469C1.14062 148.719 1.23438 139.156 1.32812 129.781C1.42188 120.312 1.5625 111.359 1.75 102.922C2.03125 86.7969 2.59375 72.4062 3.4375 59.75C4.28125 47.0938 5.64062 36.4062 7.51562 27.6875C9.39062 18.9688 11.9219 12.3594 15.1094 7.85938C18.3906 3.26562 22.5156 0.96875 27.4844 0.96875C31.4219 0.96875 34.75 2.09375 37.4688 4.34375C40.1875 6.5 42.3906 9.45312 44.0781 13.2031C45.7656 16.8594 46.9844 21.1719 47.7344 26.1406C48.4844 31.1094 48.8594 36.3125 48.8594 41.75C48.8594 53.1875 47.875 64.25 45.9062 74.9375C43.9375 85.625 41.2656 95.9844 37.8906 106.016C34.5156 116.047 30.5312 125.844 25.9375 135.406C21.4375 144.969 16.6094 154.391 11.4531 163.672C11.4531 167.516 11.4531 171.688 11.4531 176.188C11.4531 180.594 11.4531 185.047 11.4531 189.547C11.4531 193.953 11.4062 198.219 11.3125 202.344C11.3125 206.375 11.3125 209.891 11.3125 212.891ZM11.7344 142.016C15.5781 134.797 19.0938 127.203 22.2812 119.234C25.5625 111.172 28.375 102.875 30.7188 94.3438C33.0625 85.8125 34.8906 77.0938 36.2031 68.1875C37.5156 59.2813 38.1719 50.3281 38.1719 41.3281C38.1719 36.8281 37.9375 32.75 37.4688 29.0938C37.0938 25.4375 36.4375 22.3438 35.5 19.8125C34.6562 17.1875 33.5312 15.1719 32.125 13.7656C30.8125 12.2656 29.2656 11.5156 27.4844 11.5156C25.6094 11.5156 23.9688 12.6406 22.5625 14.8906C21.1562 17.1406 19.9375 20.1406 18.9062 23.8906C17.875 27.6406 16.9844 31.9531 16.2344 36.8281C15.5781 41.7031 15.0156 46.8125 14.5469 52.1562C14.0781 57.4062 13.7031 62.7031 13.4219 68.0469C13.1406 73.2969 12.9062 78.2656 12.7188 82.9531C12.625 87.5469 12.5312 91.625 12.4375 95.1875C12.4375 98.75 12.4375 101.422 12.4375 103.203C12.3438 106.953 12.25 110.281 12.1562 113.188C12.1562 116.094 12.1094 118.953 12.0156 121.766C11.9219 124.578 11.8281 127.578 11.7344 130.766C11.7344 133.953 11.7344 137.703 11.7344 142.016ZM11.3125 230.188C11.3125 236.094 11.2656 241.578 11.1719 246.641C11.1719 251.797 11.1719 256.484 11.1719 260.703C11.1719 269.422 11.2188 278.047 11.3125 286.578C11.4062 295.109 11.8281 302.75 12.5781 309.5C13.4219 316.344 14.6406 321.828 16.2344 325.953C17.9219 330.172 20.3125 332.281 23.4062 332.281C26.2188 332.281 28.5156 331.016 30.2969 328.484C32.0781 325.953 33.4375 322.953 34.375 319.484C35.4062 316.016 36.1094 312.453 36.4844 308.797C36.8594 305.234 37.0469 302.328 37.0469 300.078C37.0469 294.359 36.4844 288.359 35.3594 282.078C34.3281 275.797 32.6875 269.562 30.4375 263.375C28.2812 257.281 25.6094 251.375 22.4219 245.656C19.2344 239.938 15.5312 234.781 11.3125 230.188ZM173.172 166.766C172.797 167.516 172 169.109 170.781 171.547C169.656 173.891 168.156 176.609 166.281 179.703C164.5 182.797 162.391 186.031 159.953 189.406C157.516 192.781 154.797 195.875 151.797 198.688C148.797 201.5 145.562 203.844 142.094 205.719C138.625 207.5 134.969 208.391 131.125 208.391C125.688 208.391 121.094 206.656 117.344 203.188C113.688 199.719 111.016 195.359 109.328 190.109C106.141 195.453 102.344 199.719 97.9375 202.906C93.5312 206 89.125 207.547 84.7188 207.547C81.25 207.547 78.1094 206.938 75.2969 205.719C72.4844 204.406 70.0938 202.625 68.125 200.375C66.1562 198.031 64.6094 195.312 63.4844 192.219C62.4531 189.125 61.9375 185.75 61.9375 182.094C61.9375 174.781 63.1562 168.359 65.5938 162.828C68.125 157.203 71.3125 152.516 75.1562 148.766C79 145.016 83.2188 142.203 87.8125 140.328C92.5 138.453 97 137.516 101.312 137.516C104.219 137.516 106.891 137.938 109.328 138.781C111.766 139.531 113.828 140.375 115.516 141.312C117.297 142.25 118.656 143.141 119.594 143.984C120.531 144.734 121.047 145.156 121.141 145.25C122.172 146.469 122.688 147.734 122.688 149.047C122.688 150.453 122.172 151.719 121.141 152.844C120.109 153.875 118.891 154.391 117.484 154.391C115.984 154.391 114.719 153.875 113.688 152.844C113.5 152.656 113.078 152.328 112.422 151.859C111.766 151.297 110.875 150.734 109.75 150.172C108.625 149.609 107.266 149.141 105.672 148.766C104.172 148.297 102.438 148.062 100.469 148.062C97.5625 148.062 94.4688 148.719 91.1875 150.031C87.9062 151.344 84.9062 153.406 82.1875 156.219C79.4688 158.938 77.1719 162.406 75.2969 166.625C73.5156 170.75 72.625 175.672 72.625 181.391C72.625 183.172 72.8125 185 73.1875 186.875C73.5625 188.656 74.2188 190.297 75.1562 191.797C76.0938 193.297 77.3594 194.516 78.9531 195.453C80.5469 196.391 82.5156 196.859 84.8594 196.859C86.5469 196.859 88.4688 196.297 90.625 195.172C92.875 194.047 94.9844 192.312 96.9531 189.969C99.0156 187.625 100.844 184.672 102.438 181.109C104.125 177.547 105.297 173.328 105.953 168.453C106.141 167.141 106.75 166.062 107.781 165.219C108.812 164.281 110.031 163.812 111.438 163.812C112.75 163.812 113.875 164.328 114.812 165.359C115.844 166.391 116.406 167.562 116.5 168.875C116.594 170.656 116.781 173.188 117.062 176.469C117.344 179.656 117.953 182.844 118.891 186.031C119.922 189.219 121.422 191.984 123.391 194.328C125.359 196.672 128.078 197.844 131.547 197.844C133.797 197.844 136 197.234 138.156 196.016C140.406 194.797 142.562 193.203 144.625 191.234C146.781 189.172 148.797 186.875 150.672 184.344C152.641 181.719 154.422 179.094 156.016 176.469C157.609 173.844 159.016 171.312 160.234 168.875C161.453 166.438 162.484 164.328 163.328 162.547C163.797 161.516 164.453 160.719 165.297 160.156C166.234 159.594 167.219 159.312 168.25 159.312C169.844 159.312 171.109 159.922 172.047 161.141C173.078 162.266 173.594 163.484 173.594 164.797C173.594 165.453 173.453 166.109 173.172 166.766ZM174.438 212.891C181.375 209.797 187.656 206.234 193.281 202.203C199 198.172 204.062 193.953 208.469 189.547C212.969 185.047 216.766 180.5 219.859 175.906C223.047 171.219 225.578 166.766 227.453 162.547C228.297 160.484 229.891 159.453 232.234 159.453C233.828 159.453 235.094 160.016 236.031 161.141C237.062 162.172 237.578 163.344 237.578 164.656C237.578 165.406 237.438 166.109 237.156 166.766C235.094 171.359 232.469 176.141 229.281 181.109C226.094 185.984 222.203 190.812 217.609 195.594C213.109 200.281 207.812 204.828 201.719 209.234C195.625 213.641 188.641 217.672 180.766 221.328C185.828 226.578 190.234 232.391 193.984 238.766C197.734 245.234 200.828 251.938 203.266 258.875C205.797 265.812 207.672 272.797 208.891 279.828C210.203 286.953 210.859 293.75 210.859 300.219C210.859 306.125 210.297 311.656 209.172 316.812C208.141 322.062 206.547 326.609 204.391 330.453C202.328 334.297 199.797 337.297 196.797 339.453C193.797 341.703 190.375 342.828 186.531 342.828C180.906 342.828 176.547 340.719 173.453 336.5C170.359 332.375 168.062 326.609 166.562 319.203C165.156 311.891 164.312 303.219 164.031 293.188C163.844 283.25 163.75 272.422 163.75 260.703C163.75 254.891 163.75 248.094 163.75 240.312C163.75 232.625 163.75 224.328 163.75 215.422C163.844 206.609 163.891 197.375 163.891 187.719C163.984 177.969 164.078 168.219 164.172 158.469C164.266 148.719 164.359 139.156 164.453 129.781C164.547 120.312 164.688 111.359 164.875 102.922C165.156 86.7969 165.719 72.4062 166.562 59.75C167.406 47.0938 168.766 36.4062 170.641 27.6875C172.516 18.9688 175.047 12.3594 178.234 7.85938C181.516 3.26562 185.641 0.96875 190.609 0.96875C194.547 0.96875 197.875 2.09375 200.594 4.34375C203.312 6.5 205.516 9.45312 207.203 13.2031C208.891 16.8594 210.109 21.1719 210.859 26.1406C211.609 31.1094 211.984 36.3125 211.984 41.75C211.984 53.1875 211 64.25 209.031 74.9375C207.062 85.625 204.391 95.9844 201.016 106.016C197.641 116.047 193.656 125.844 189.062 135.406C184.562 144.969 179.734 154.391 174.578 163.672C174.578 167.516 174.578 171.688 174.578 176.188C174.578 180.594 174.578 185.047 174.578 189.547C174.578 193.953 174.531 198.219 174.438 202.344C174.438 206.375 174.438 209.891 174.438 212.891ZM174.859 142.016C178.703 134.797 182.219 127.203 185.406 119.234C188.688 111.172 191.5 102.875 193.844 94.3438C196.188 85.8125 198.016 77.0938 199.328 68.1875C200.641 59.2813 201.297 50.3281 201.297 41.3281C201.297 36.8281 201.062 32.75 200.594 29.0938C200.219 25.4375 199.562 22.3438 198.625 19.8125C197.781 17.1875 196.656 15.1719 195.25 13.7656C193.938 12.2656 192.391 11.5156 190.609 11.5156C188.734 11.5156 187.094 12.6406 185.688 14.8906C184.281 17.1406 183.062 20.1406 182.031 23.8906C181 27.6406 180.109 31.9531 179.359 36.8281C178.703 41.7031 178.141 46.8125 177.672 52.1562C177.203 57.4062 176.828 62.7031 176.547 68.0469C176.266 73.2969 176.031 78.2656 175.844 82.9531C175.75 87.5469 175.656 91.625 175.562 95.1875C175.562 98.75 175.562 101.422 175.562 103.203C175.469 106.953 175.375 110.281 175.281 113.188C175.281 116.094 175.234 118.953 175.141 121.766C175.047 124.578 174.953 127.578 174.859 130.766C174.859 133.953 174.859 137.703 174.859 142.016ZM174.438 230.188C174.438 236.094 174.391 241.578 174.297 246.641C174.297 251.797 174.297 256.484 174.297 260.703C174.297 269.422 174.344 278.047 174.438 286.578C174.531 295.109 174.953 302.75 175.703 309.5C176.547 316.344 177.766 321.828 179.359 325.953C181.047 330.172 183.438 332.281 186.531 332.281C189.344 332.281 191.641 331.016 193.422 328.484C195.203 325.953 196.562 322.953 197.5 319.484C198.531 316.016 199.234 312.453 199.609 308.797C199.984 305.234 200.172 302.328 200.172 300.078C200.172 294.359 199.609 288.359 198.484 282.078C197.453 275.797 195.812 269.562 193.562 263.375C191.406 257.281 188.734 251.375 185.547 245.656C182.359 239.938 178.656 234.781 174.438 230.188Z\"\r\n      />\r\n    </motion.svg>\r\n  );\r\n};\r\n","import Color from \"../../res/colors\";\r\nimport { SplashScreenElement, SplashScreenLogo } from \"./style\";\r\n\r\nconst SplashScreen = () => {\r\n  const color = [\r\n    Color.primary,\r\n    Color.secondary,\r\n    Color.danger,\r\n    Color.warning,\r\n  ].sort(() => 0.5 - Math.random());\r\n  const initialColor = color.splice(0, 1)[0];\r\n\r\n  return (\r\n    <SplashScreenElement\r\n      initial={{ backgroundColor: initialColor }}\r\n      animate={{\r\n        backgroundColor: [...color],\r\n      }}\r\n      transition={{\r\n        backgroundColor: { duration: 2 },\r\n      }}\r\n    >\r\n      <SplashScreenLogo />\r\n    </SplashScreenElement>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n","import About from \"./components/about\";\nimport Hero from \"./components/hero\";\nimport Main from \"./components/main\";\nimport Navbar from \"./components/navbar\";\nimport Sertificate from \"./components/sertificate\";\nimport SplashScreen from \"./components/splashscreen\";\nimport { FinishAnimSplashScreenProvider } from \"./hooks/useFinishAnimSplashScreen\";\n\nconst App = () => (\n  <FinishAnimSplashScreenProvider>\n    <SplashScreen />\n    <Main>\n      <Navbar />\n      <Hero />\n      <About />\n      <Sertificate />\n    </Main>\n  </FinishAnimSplashScreenProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}